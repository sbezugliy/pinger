#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'

score = [17, 12, 10, 2, 7, 2, 11, 20, 8]
team = 5
m = 4

def get_max_score(arr)
  arr.each_with_index.max
end

def select_candidate(score_set)
  c1 = get_max_score(score_set[0])
  c2 = get_max_score(score_set[2])
  candidate = if c1[0] >= c2[0]
    score_set[0].delete_at(c1[1])
    c1[0]
  else
    score_set[2].delete_at(c2[1])
    c2[0]
  end
  [candidate, score_set]
end

def teamFormation(score, team, m)
  result = [] 
  # if team >= score.length
  #   result = score.sort.shift(m)
  # else
    calc_size = -> (l, m) {
      if l >= m*2
        if l % 2 == 0
          return [l / 2, l / 2]
        else
          tmp = (l - 1) / 2
          return [tmp+1, tmp]
        end
      else 
        return [m, m]
      end
    }

    team.times do 
      size = calc_size.(score.length, m)
      first = score.shift(size[0])
      last = score.pop(size[1])
      score_set = select_candidate([first, score, last])
      result << score_set[0]
      score = score_set[1].flatten
    end
  # end
  result.sum
end

p teamFormation(score, team, m)
